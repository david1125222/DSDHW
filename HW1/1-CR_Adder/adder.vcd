$date
    Mar 22, 2018  17:21:19
$end
$version
    TOOL:	ncsim	10.20-s114
$end
$timescale
    10 ps
$end

$scope module adder_gate_test $end
$var parameter 32 !    pattern_num  $end
$var wire      1 "    out [7] $end
$var wire      1 #    out [6] $end
$var wire      1 $    out [5] $end
$var wire      1 %    out [4] $end
$var wire      1 &    out [3] $end
$var wire      1 '    out [2] $end
$var wire      1 (    out [1] $end
$var wire      1 )    out [0] $end
$var wire      1 *    carry  $end
$var reg       8 +    x [7:0] $end
$var reg       8 ,    y [7:0] $end
$var reg       1 -    clk  $end
$var reg       1 .    stop  $end
$var integer  32 /    i  $end
$var integer  32 0    num  $end
$var integer  32 1    error  $end
$var reg       9 2    ans_out [8:0] $end
$var reg       9 3    adder_out [8:0] $end

$scope module A $end
$var wire      1 4    x [7] $end
$var wire      1 5    x [6] $end
$var wire      1 6    x [5] $end
$var wire      1 7    x [4] $end
$var wire      1 8    x [3] $end
$var wire      1 9    x [2] $end
$var wire      1 :    x [1] $end
$var wire      1 ;    x [0] $end
$var wire      1 <    y [7] $end
$var wire      1 =    y [6] $end
$var wire      1 >    y [5] $end
$var wire      1 ?    y [4] $end
$var wire      1 @    y [3] $end
$var wire      1 A    y [2] $end
$var wire      1 B    y [1] $end
$var wire      1 C    y [0] $end
$var wire      1 *    carry  $end
$var wire      1 "    out [7] $end
$var wire      1 #    out [6] $end
$var wire      1 $    out [5] $end
$var wire      1 %    out [4] $end
$var wire      1 &    out [3] $end
$var wire      1 '    out [2] $end
$var wire      1 (    out [1] $end
$var wire      1 )    out [0] $end
$var wire      1 D    c1  $end
$var wire      1 E    c2  $end
$var wire      1 F    c3  $end
$var wire      1 G    c4  $end
$var wire      1 H    c5  $end
$var wire      1 I    c6  $end
$var wire      1 J    c7  $end
$var wire      1 K    c8  $end
$var reg       1 L    cin  $end

$scope module fa1 $end
$var wire      1 ;    x1  $end
$var wire      1 C    y1  $end
$var wire      1 M    ci  $end
$var wire      1 D    co  $end
$var wire      1 )    sum  $end
$var wire      1 N    xy  $end
$var wire      1 O    yc  $end
$var wire      1 P    cx  $end
$upscope $end


$scope module fa2 $end
$var wire      1 :    x1  $end
$var wire      1 B    y1  $end
$var wire      1 D    ci  $end
$var wire      1 E    co  $end
$var wire      1 (    sum  $end
$var wire      1 Q    xy  $end
$var wire      1 R    yc  $end
$var wire      1 S    cx  $end
$upscope $end


$scope module fa3 $end
$var wire      1 9    x1  $end
$var wire      1 A    y1  $end
$var wire      1 E    ci  $end
$var wire      1 F    co  $end
$var wire      1 '    sum  $end
$var wire      1 T    xy  $end
$var wire      1 U    yc  $end
$var wire      1 V    cx  $end
$upscope $end


$scope module fa4 $end
$var wire      1 8    x1  $end
$var wire      1 @    y1  $end
$var wire      1 F    ci  $end
$var wire      1 G    co  $end
$var wire      1 &    sum  $end
$var wire      1 W    xy  $end
$var wire      1 X    yc  $end
$var wire      1 Y    cx  $end
$upscope $end


$scope module fa5 $end
$var wire      1 7    x1  $end
$var wire      1 ?    y1  $end
$var wire      1 G    ci  $end
$var wire      1 H    co  $end
$var wire      1 %    sum  $end
$var wire      1 Z    xy  $end
$var wire      1 [    yc  $end
$var wire      1 \    cx  $end
$upscope $end


$scope module fa6 $end
$var wire      1 6    x1  $end
$var wire      1 >    y1  $end
$var wire      1 H    ci  $end
$var wire      1 I    co  $end
$var wire      1 $    sum  $end
$var wire      1 ]    xy  $end
$var wire      1 ^    yc  $end
$var wire      1 _    cx  $end
$upscope $end


$scope module fa7 $end
$var wire      1 5    x1  $end
$var wire      1 =    y1  $end
$var wire      1 I    ci  $end
$var wire      1 J    co  $end
$var wire      1 #    sum  $end
$var wire      1 `    xy  $end
$var wire      1 a    yc  $end
$var wire      1 b    cx  $end
$upscope $end


$scope module fa8 $end
$var wire      1 4    x1  $end
$var wire      1 <    y1  $end
$var wire      1 J    ci  $end
$var wire      1 *    co  $end
$var wire      1 "    sum  $end
$var wire      1 c    xy  $end
$var wire      1 d    yc  $end
$var wire      1 e    cx  $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b1010 !
0"
0#
0$
0%
0&
0'
0(
0)
0*
b0 +
b0 ,
1-
0.
b0 /
b10 0
b0 1
bx 2
bx 3
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
zK
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
0d
0e
$end
#1000
0-
#2000
1-
b11111111 +
b11111111 ,
b100 0
1<
1=
1>
1?
1@
1A
1B
1C
14
15
16
17
18
19
1:
1;
1N
1Q
1T
1W
1Z
1]
1`
1c
1*
1J
1I
1H
1G
1F
1E
1D
1(
1S
1R
1'
1V
1U
1&
1Y
1X
1%
1\
1[
1$
1_
1^
1#
1b
1a
1"
1e
1d
b1 /
b0 3
b0 2
#3000
0-
#4000
1-
b101010 +
b11011000 ,
b110 0
0>
0A
0B
0C
04
05
07
09
0;
0V
0%
0\
0Z
0#
0b
0`
0"
0e
0c
0N
1(
0R
0Q
0U
0T
0$
0^
0]
0F
0D
0S
0&
0Y
0X
0E
0'
b10 /
b111111110 3
b111111110 2
#5000
0-
#6000
1-
b111000 +
b111001 ,
b1000 0
0<
0=
1>
1C
17
0:
0(
1%
1\
1Z
1)
1$
1^
1]
1#
0a
0"
0d
0*
0J
b11 /
b100000010 3
b100000010 2
#7000
0-
#8000
1-
b1110000 +
b1111 ,
b1010 0
0>
0?
1A
1B
15
08
1&
0W
1#
0b
1(
1'
1%
0[
0Z
1$
0^
0]
0J
0G
0\
0"
0H
0_
0I
b100 /
b1110001 3
b1110001 2
#9000
0-
#10000
1-
b11001001 +
b11110 ,
b1100 0
1?
0C
14
06
07
18
1;
0&
1W
1$
1"
1G
0%
1[
1H
b101 /
b1111111 3
b1111111 2
#11000
0-
#12000
1-
b1011011 +
b1101010 ,
b1110 0
1=
1>
0?
0A
04
17
1:
0(
1Q
1\
1"
1'
0[
0$
1^
1#
1`
1J
1I
1E
1b
1a
b110 /
b11100111 3
b11100111 2
#13000
0-
#14000
1-
b11101 +
b11010001 ,
b10000 0
1<
0>
1?
0@
0B
1C
05
19
0:
1'
0V
1#
0b
0`
0)
1N
0Q
1&
0W
0%
0[
1Z
1$
0^
1"
0d
0*
0I
0G
0E
1D
0F
0Y
1(
0\
0a
0J
b111 /
b11000101 3
b11000101 2
#15000
0-
#16000
1-
b11101001 +
b11111000 ,
b10010 0
1>
1@
0C
14
15
16
07
09
0'
0%
0Z
1_
1]
1#
1`
1"
1c
1)
0N
0&
1W
1^
1G
0D
1*
1J
1I
1H
1$
1b
1a
1e
1d
0(
1[
b1000 /
b11101110 3
b11101110 2
#17000
0-
#18000
1-
b11110000 +
b11011 ,
b10100 0
0<
0=
0>
1B
1C
17
08
0;
1&
0W
0%
0\
1Z
1(
0$
0^
0]
0#
0a
0`
0"
0d
0c
0G
0[
b1001 /
b111100001 3
b111100001 2
#19000
0-
#20000
1-
b1010 /
b100001011 3
b100001011 2
#21000
0-
#22000
1-
b1011 /
1.
bx 2
